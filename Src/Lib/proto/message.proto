syntax = "proto3";

package SkillBridge.Message;

option csharp_namespace = "SkillBridge.Message";
option cc_enable_arenas = true;

////////////////////////////////////////////////////////////////
//
//  Basic Defines
//
////////////////////////////////////////////////////////////////
enum RESULT
{
	SUCCESS = 0;
	FAILED = 1;
}

enum CHARACTER_TYPE
{
	Player = 0;
	NPC = 1;
	Monster = 2;
}

enum CHARACTER_CLASS
{
	NONE = 0;
	WARRIOR = 1;
	WIZARD = 2;
	ARCHER = 3;
}

enum CHARACTER_STATE
{
	IDLE = 0;
	MOVE = 1;
}

enum ENTITY_EVENT
{
	NONE = 0;
	IDLE = 1;
	MOVE_FWD = 2;
	MOVE_BACK = 3;
	JUMP = 4;
	RIDE = 5;
}

enum ITEM_TYPE
{
	NORMAL = 0;
	MATERIAL = 1;
	TASK = 2;
	EQUIP = 3;
	RIDE = 4;
}

enum EQUIP_SLOT
{
	WEAPON = 0;
	ACCESSORY = 1;
	HELMET = 2;
	CHEST = 3;
	SHOULDER = 4;
	PANTS = 5;
	BOOTS = 6;
	SLOT_CAP = 7;
}

message NUserInfo {
	int32 id = 1;
	NPlayerInfo player = 2;
}

message NPlayerInfo {
	int32 id = 1;
	repeated NCharacterInfo characters = 2;
}

message NCharacterInfo {
	int32 id = 1;//db id
	int32 config_id = 2;//id in config file
	int32 entity_id = 3;
	string name = 4;
	CHARACTER_TYPE type = 5;
	CHARACTER_CLASS class = 6;
	int32 level = 7;
	int64 exp = 8;
	NDynamicAttribte dynamicAttri = 9;
	int32 mapId = 10;
	NEntity entity = 11;
	int64 gold = 12;

	repeated NItemInfo Items = 13;
	NBagInfo Bag = 14;
	bytes Equips = 15;
	repeated NQuestInfo quests = 16;
	repeated NFriendInfo friends = 17;
	NGuildInfo guild = 18;
	int32 ride = 19;

	repeated NSkillInfo skills = 20;
}

message NDynamicAttribte 
{
	int32 HP = 1;
	int32 MP = 2;
}

message NItemInfo 
{
	int32 id = 1;
	int32 count = 2;
}

message NSkillInfo 
{
	int32 id = 1;
	int32 lv = 2;
}

message NVector3
{
	int32 x = 1;
	int32 y = 2;
	int32 z = 3;
}

message NBagInfo 
{
	int32 Unlocked = 1;
	bytes Items = 2;
}

enum STATUS_ACTION 
{
	UPDATE = 0;
	ADD = 1;
	DELETE = 2;
}

enum STATUS_TYPE 
{
	MONEY = 0;
	EXP = 1;
	LV = 2;
	SKILL_POINT = 3;
	ITEM = 4;
}

message NStatus 
{
	STATUS_TYPE type = 1;
	STATUS_ACTION action = 2;
	int32 id = 3;
	int32 value = 4;
}

message StatusNotify 
{
	repeated NStatus status = 1;
}

////////////////////////////////////////////////////////////////
//
//  Entities
//
////////////////////////////////////////////////////////////////


message NEntity {
	int32 id = 1;
	NVector3 position = 2;
	NVector3 direction = 3;
	int32 speed = 4;
}

message NEntitySync {
	int32 id = 1;
	ENTITY_EVENT event = 2;
	NEntity entity = 3;
	int32 param = 4;
}



////////////////////////////////////////////////////////////////
//
//  Messages
//
////////////////////////////////////////////////////////////////

message NetMessage{
	NetMessageRequest Request = 1;
	NetMessageResponse Response = 2;
}

message NetMessageRequest{
	UserRegisterRequest userRegister = 1;
	UserLoginRequest userLogin = 2;
	UserCreateCharacterRequest createChar = 3;
	UserGameEnterRequest gameEnter = 4;
	UserGameLeaveRequest gameLeave = 5;
	
	MapCharacterEnterRequest mapCharacterEnter = 6;

	MapEntitySyncRequest mapEntitySync = 8;
	MapTeleportRequest mapTeleport = 9;

	ItemPurchaseRequest itemPurchase = 10;
	ItemEquipRequest ItemEquip = 11;

	QuestListRequest questList = 12;
	QuestAccepctRequest questAccept = 13;
	QuestSubmitRequest questSubmit = 14;

	FriendAddRequest friendAddReq = 15;
	FriendAddResponse friendAddRes = 16;
	FriendListRequest friendList = 17;
	FriendRemoveRequest friendRemove = 18;

	TeamInviteRequest teamInviteReq = 19;
	TeamInviteResponse teamInviteRes = 20;
	TeamInfoRequest teamInfo = 21;
	TeamLeaveRequest teamLeave = 22;

	GuildCreationRequest guildCreation = 23;
	GuildJoinRequest guildJoinReq = 24;
	GuildJoinResponse guildJoinRes = 25;
	GuildInfoRequest guildInfo = 26;
	GuildLeaveRequest guildLeave = 27;
	GuildListRequest guildList = 28;
	GuildAdminRequest guildAdmin = 29;

	ChatRequest chat = 30;

	CastSkillRequest castSkill = 31;
}

message NetMessageResponse{
	UserRegisterResponse userRegister = 1;
	UserLoginResponse userLogin = 2;
	UserCreateCharacterResponse createChar = 3;
	UserGameEnterResponse gameEnter = 4;
	UserGameLeaveResponse gameLeave = 5;

	MapCharacterEnterResponse mapCharacterEnter = 6;
	MapCharacterLeaveResponse mapCharacterLeave = 7;

	MapEntitySyncResponse mapEntitySync = 8;
	
	ItemPurchaseResponse itemPurchase = 10;
	ItemEquipResponse ItemEquip = 11;

	QuestListResponse questList = 12;
	QuestAccepctResponse questAccept = 13;
	QuestSubmitResponse questSubmit = 14;

	FriendAddRequest friendAddReq = 15;
	FriendAddResponse friendAddRes = 16;
	FriendListResponse friendList = 17;
	FriendRemoveResponse friendRemove = 18;

	TeamInviteRequest teamInviteReq = 19;
	TeamInviteResponse teamInviteRes = 20;
	TeamInfoResponse teamInfo = 21;
	TeamLeaveResponse teamLeave = 22;

	GuildCreationResponse guildCreation = 23;
	GuildJoinRequest guildJoinReq = 24;
	GuildJoinResponse guildJoinRes = 25;
	GuildInfoResponse guildInfo = 26;
	GuildLeaveResponse guildLeave = 27;
	GuildListResponse guildList = 28;
	GuildAdminResponse guildAdmin = 29;

	ChatResponse chat = 30;

	CastSkillResponse castSkill = 50;
	SkillHitResponse skillHits = 51;
	BuffResponse buffRes = 52;

	StatusNotify statusNotify = 100;
}


// User Protocol

message UserLoginRequest {
	string user = 1;
	string passward = 2;
}

message UserLoginResponse {
	RESULT result = 1;
	string errormsg = 2;
	NUserInfo userinfo = 3;
}


message UserRegisterRequest
{
	string user = 1;
	string passward = 2;
}

message UserRegisterResponse {
	RESULT result = 1;
	string errormsg = 2;
}

message UserCreateCharacterRequest
{
	string name = 1;
	CHARACTER_CLASS class = 2;
}

message UserCreateCharacterResponse {
	RESULT result = 1;
	string errormsg = 2;
	repeated NCharacterInfo characters = 3;
}

message UserGameEnterRequest
{
	int32 characterIdx = 1;
}

message UserGameEnterResponse {
	RESULT result = 1;
	string errormsg = 2;
	NCharacterInfo character = 3;
}

message UserGameLeaveRequest
{
}

message UserGameLeaveResponse {
	RESULT result = 1;
	string errormsg = 2;
}

// Map Protocol
message MapCharacterEnterRequest
{
	int32 mapId = 1;
}

message MapCharacterEnterResponse
{
	int32 mapId = 1;
	repeated NCharacterInfo characters = 2;
}

message MapCharacterLeaveResponse
{
	int32 entityId = 1;
}


message MapEntitySyncRequest
{
    NEntitySync entitySync = 1;
}


message MapEntitySyncResponse
{
    repeated NEntitySync entitySyncs = 2;
}

message MapTeleportRequest
{
	int32 teleporterId = 1;
}

message ItemPurchaseRequest 
{
	int32 shopId = 1;
	int32 shopItemId = 2;
}

message ItemPurchaseResponse {
	RESULT result = 1;
	string errormsg = 2;
}

message BagSaveRequest 
{
	NBagInfo BagInfo = 1;
}

message BagSaveResponse 
{
	RESULT result = 1;
	string errormsg = 2;
}

message ItemEquipRequest 
{
	int32 slot = 1;
	int32 itemId = 2;
	bool ifEquip = 3;
}

message ItemEquipResponse 
{
	RESULT result = 1;
	string errormsg = 2;
}

//Quest System
enum QUEST_STATUS 
{
	IN_PROGRESS = 0;
	COMPLETE = 1;
	FINISHED = 2;
	FAILED = 3;
}

enum QUEST_LIST_TYPE 
{
	ALL = 0;
	IN_PROGRESS = 1;
	FINISHED = 2;
}

message NQuestInfo 
{
	int32 quest_id = 1;
	int32 quest_guid = 2;
	QUEST_STATUS status = 3;
	repeated int32 target = 4;
}

message QuestListRequest 
{
	QUEST_LIST_TYPE type = 1;
}

message QuestListResponse 
{
	RESULT result = 1;
	string errormsg = 2;
	repeated NQuestInfo quests = 3;
}

message QuestAccepctRequest
{
	int32 quest_id = 1;
}

message QuestAccepctResponse 
{
	RESULT result = 1;
	string errormsg = 2;
	NQuestInfo quest = 3;
}

message QuestSubmitRequest
{
	int32 quest_id = 1;
}

message QuestSubmitResponse
{
	RESULT result = 1;
	string errormsg = 2;
	NQuestInfo quest = 3;
}

message QuestAbandonRequest
{
	int32 quest_id = 1;
}

message QuestAbandonResponse
{
	RESULT result = 1;
	string errormsg = 2;
}

//Friend System
message NFriendInfo 
{
	int32 id = 1;//friend relation id
	NCharacterInfo friendInfo = 2;
	int32 status = 3;//online or offline
}

message FriendAddRequest 
{
	int32 from_id = 1;
	string from_name = 2;
	int32 to_id = 3;
	string to_name = 4;
}

message FriendAddResponse
{
	RESULT result = 1;
	string errormsg = 2;
	FriendAddRequest request = 3;
}

message FriendListRequest 
{
}

message FriendListResponse
{
	RESULT result = 1;
	string errormsg = 2;
	repeated NFriendInfo friends = 3;
}

message FriendRemoveRequest 
{
	int32 id = 1;
	int32 friendId = 2;
}

message FriendRemoveResponse 
{
	RESULT result = 1;
	string errormsg = 2;
	int32 id = 3;
}

//Team System
message NTeamInfo
{
	int32 id = 1;
	int32 leader = 2;
	repeated NCharacterInfo members = 3;
}

message TeamInviteRequest 
{
	int32 team_id = 1;
	int32 from_id = 2;
	string from_name = 3;
	int32 to_id = 4;
	string to_name = 5;
}

message TeamInviteResponse 
{
	RESULT result = 1;
	string errormsg = 2;
	TeamInviteRequest request = 3;
}

message TeamInfoRequest 
{
}

message TeamInfoResponse
{
	RESULT result = 1;
	string errormsg = 2;
	NTeamInfo teamInfo = 3;
}

message TeamLeaveRequest
{
	int32 team_id = 1;
	int32 characterId = 2;
}

message TeamLeaveResponse 
{
	RESULT result = 1;
	string errormsg = 2;
	int32 characterId = 3;
}

//Guild System
enum GUILD_TITLE 
{
	NONE = 0;
	VICE_PRESIDENT = 1;
	PRESIDENT = 2;
}

enum JOIN_GUILD_RESULT 
{
	NONE = 0;
	ACCEPT = 1;
	REJECT = 2;
}

message NGuildInfo 
{
	int32 id = 1;
	string guildName = 2;
	int32 leaderId = 3;
	string leaderName = 4;
	string overview = 5;
	int32 memberCount = 6;
	repeated NGuildMemberInfo members = 7;
	repeated NGuildApplicantInfo applicants = 8;
	int64 foundTime = 9;
}

message NGuildMemberInfo 
{
	int32 id = 1;
	int32 characterId = 2;
	GUILD_TITLE title = 3;
	NCharacterInfo info = 4;
	int64 joinTime = 5;
	int64 lastOnlineTime = 6;
	int32 status = 7;
}

message NGuildApplicantInfo 
{
	int32 guildId = 1;
	int32 characterId = 2;
	string name = 3;
	int32 class = 4;
	int32 level = 5;
	JOIN_GUILD_RESULT result = 6;
}

message GuildCreationRequest
{
	string name = 1;
	string overview = 2;
}

message GuildCreationResponse
{
	RESULT result = 1;
	string errormsg = 2;
	NGuildInfo guildInfo = 3;
}

message GuildJoinRequest
{
	NGuildApplicantInfo applicant = 1;
}

message GuildJoinResponse
{
	RESULT result = 1;
	string errormsg = 2;
	NGuildApplicantInfo applicant = 3;
}

message GuildListRequest
{
}

message GuildListResponse
{
	RESULT result = 1;
	string errormsg = 2;
	repeated NGuildInfo guilds = 3;
}

message GuildInfoRequest
{
}

message GuildInfoResponse
{
	RESULT result = 1;
	string errormsg = 2;
	NGuildInfo guild = 3;
}

message GuildLeaveRequest
{
}

message GuildLeaveResponse
{
	RESULT result = 1;
	string errormsg = 2;
}

enum GUILD_ADMIN_ACTION 
{
	KICKOUT = 0;
	PROMOTE = 1;
	DEMOTE = 2;
	TRANSFER = 3;
}

message GuildAdminRequest 
{
	GUILD_ADMIN_ACTION action = 1;
	int32 target = 2;
}

message GuildAdminResponse 
{
	RESULT result = 1;
	string errormsg = 2;
	GuildAdminRequest request = 3;
}

//chat
enum CHAT_CHANNEL 
{
	ALL = -1;
	LOCAL = 1;
	WORLD = 2;
	SYSTEM = 4;
	PRIVATE = 8;
	TEAM = 16;
	GUILD = 32;
}

message ChatMessage 
{
	CHAT_CHANNEL channel = 1;
	int32 id = 2;
	int32 from_id = 3;
	string from_name = 4;
	int32 to_id = 5;
	string to_name = 6;
	string message = 7;
	double time = 8;
}

message ChatRequest 
{
	ChatMessage message = 1;
}

message ChatResponse
{
	RESULT result = 1;
	string errormsg = 2;
	repeated ChatMessage localMessage = 3;
	repeated ChatMessage worldMessage = 4;
	repeated ChatMessage systemMessage = 5;
	repeated ChatMessage privateMessage = 6;
	repeated ChatMessage teamMessage = 7;
	repeated ChatMessage guildMessage = 8;
}

//Battle
enum SKILL_RESULT 
{
	VALID = 0;
	INVALID_MP = 1;
	COOL_DOWN = 2;
	INVALID_TARGET = 3;
	OUT_OF_RANGE = 4;
	INVALID_SKILL = 5;
	CASTING = 6;
}

enum SKILL_STATUS 
{
	NONE = 0;
	PREPARING = 1;
	CASTING = 2;
}

message NCastSkillInfo 
{
	int32 skillId = 1;
	int32 casterId = 2;
	int32 targetId = 3;
	NVector3 position = 4;
}

message NHitInfo 
{
	int32 skillId = 1;
	int32 casterId = 2;
	int32 hitId = 3;
	bool ifBullet = 4;
	repeated NDamageInfo damages = 5;
}

message NDamageInfo 
{
	int32 entityId = 1;
	int32 dmg = 2;
	bool crit = 3;
	bool dead_after_dmg = 4;
}

message CastSkillRequest
{
	NCastSkillInfo info = 1;
}

message CastSkillResponse
{
	RESULT result = 1;
	string errormsg = 2;
	NCastSkillInfo info = 3;
}

message SkillHitResponse
{
	RESULT result = 1;
	string errormsg = 2;
	repeated NHitInfo hits = 3;
}


enum BUFF_ACTION 
{
	NONE = 0;
	ADD = 1;
	REMOVE = 2;
	APPLY = 3;
}

message NBuffInfo
{
	int32 uid = 1; //unique id of this buff entity
	int32 tid = 2; //type id marks which buff this is
	BUFF_ACTION action = 3;
	int32 casterId = 4;
	int32 ownerId = 5;
	NDamageInfo damage = 6;
}

message BuffResponse
{
	RESULT result = 1;
	string errormsg = 2;
	repeated NBuffInfo buffs = 3;
}